<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="FramesTabTitle" xml:space="preserve">
    <value>畫面格</value>
  </data>
  <data name="FramesTabTooltip" xml:space="preserve">
    <value>畫面格</value>
  </data>
  <data name="GraphCollapseAriaLabel" xml:space="preserve">
    <value>按 ENTER 摺疊圖形。</value>
  </data>
  <data name="GraphExpandAriaLabel" xml:space="preserve">
    <value>按 ENTER 展開圖形。</value>
  </data>
  <data name="HotElementsTabTitle" xml:space="preserve">
    <value>熱門項目</value>
  </data>
  <data name="HotElementsTabTooltip" xml:space="preserve">
    <value>依範本群組</value>
  </data>
  <data name="Layout_Category" xml:space="preserve">
    <value>配置</value>
  </data>
  <data name="LayoutLegendTooltip" xml:space="preserve">
    <value>花費在配置上的時間百分比</value>
  </data>
  <data name="LogicalTreeTabTitle" xml:space="preserve">
    <value>邏輯樹狀目錄</value>
  </data>
  <data name="LogicalTreeTooltip" xml:space="preserve">
    <value>邏輯樹狀目錄</value>
  </data>
  <data name="MillisecondsAbbreviation" xml:space="preserve">
    <value>毫秒</value>
  </data>
  <data name="MillisecondsLabel" xml:space="preserve">
    <value>毫秒</value>
  </data>
  <data name="MinutesAbbreviation" xml:space="preserve">
    <value>分鐘</value>
  </data>
  <data name="MinutesLabel" xml:space="preserve">
    <value>分鐘</value>
  </data>
  <data name="ParsingTabTitle" xml:space="preserve">
    <value>剖析</value>
  </data>
  <data name="ParsingTabTooltip" xml:space="preserve">
    <value>剖析</value>
  </data>
  <data name="Parsing_Category" xml:space="preserve">
    <value>剖析</value>
  </data>
  <data name="ParsingLegendTooltip" xml:space="preserve">
    <value>花費在剖析 XAML 文件上的時間百分比</value>
  </data>
  <data name="RulerAriaLabel" xml:space="preserve">
    <value>尺規的最小值是 {0}，最大值是 {1}</value>
  </data>
  <data name="RulerLeftSliderAriaLabel" xml:space="preserve">
    <value>左滑桿</value>
  </data>
  <data name="RulerLifecycleMarkLabel" xml:space="preserve">
    <value>應用程式週期標記</value>
  </data>
  <data name="RulerRightSliderAriaLabel" xml:space="preserve">
    <value>右滑桿</value>
  </data>
  <data name="RulerSliderAriaValueText" xml:space="preserve">
    <value>目前值是 {0}。最小值是 {1}。最大值是 {2}。</value>
  </data>
  <data name="RulerTitle" xml:space="preserve">
    <value>診斷工作階段</value>
  </data>
  <data name="RulerUserMarkLabel" xml:space="preserve">
    <value>使用者標記</value>
  </data>
  <data name="Ruler_LifeCycleEvents" xml:space="preserve">
    <value>應用程式週期標記</value>
  </data>
  <data name="Ruler_UserMarks" xml:space="preserve">
    <value>使用者標記</value>
  </data>
  <data name="RulerMarkTooltipLabel" xml:space="preserve"> <!-- Appended to label text in diagnostics hub ruler control, e.g. "Activation Start"xxxxxx -->
    <value> 於 {0}</value>
  </data>
  <data name="RulerMarkLabel" xml:space="preserve">
    <value>尺規標記，用以指示發生下列事件: {0}</value>
    <comment>{0} is replaced with the tooltip content of the ruler mark(s)</comment>
  </data>
  <data name="SecondsAbbreviation" xml:space="preserve">
    <value>秒</value>
  </data>
  <data name="SecondsLabel" xml:space="preserve">
    <value>秒</value>
  </data>
  <data name="SummaryTabTitle" xml:space="preserve">
    <value>摘要</value>
  </data>
  <data name="SummaryTabTooltip" xml:space="preserve">
    <value>摘要</value>
  </data>
  <data name="UiThreadActivityAriaLabel" xml:space="preserve">
    <value>代表應用程式 UI 執行緒使用率的橫條圖。按向右鍵和向左鍵即可瀏覽。</value>
  </data>
  <data name="UiThreadActivityBarAriaLabel" xml:space="preserve">
    <value>{0} 利用了 UI 執行緒 {1}% 的時間</value>
  </data>
  <data name="UiThreadActivityChartTitle" xml:space="preserve">
    <value>UI 執行緒使用率 (%)</value>
  </data>
  <data name="XamlOther_Category" xml:space="preserve">
    <value>XAML 其他</value>
  </data>
  <data name="XamlOtherLegendTooltip" xml:space="preserve">
    <value>花費在其他 XAML 服務上的時間百分比</value>
  </data>
  <data name="XamlProfilerDetailsViewTitle" xml:space="preserve">
    <value>XAML UI 回應性</value>
  </data>
  <data name="XamlProfilerToolDescription" xml:space="preserve">
    <value>檢查您應用程式中的時間使用狀況</value>
  </data>
  <data name="XamlProfilerToolName" xml:space="preserve">
    <value>XAML UI 回應性</value>
  </data>
  <data name="SelectAnEventDescription" xml:space="preserve">
    <value>選取時間表內的項目，以檢視詳細資料</value>
  </data>
  <data name="DescriptionLabel" xml:space="preserve">
    <value>描述</value>
  </data>
  <data name="DurationExclusiveLabel" xml:space="preserve">
    <value>持續時間 (排除)</value>
  </data>
  <data name="DurationInclusiveLabel" xml:space="preserve">
    <value>持續時間 (內含)</value>
  </data>
  <data name="ElementsExclusiveLabel" xml:space="preserve">
    <value>UI 項目 (排除)</value>
  </data>
  <data name="ElementsInclusiveLabel" xml:space="preserve">
    <value>UI 項目 (內含)</value>
  </data>
  <data name="EndTimeLabel" xml:space="preserve">
    <value>結束時間</value>
  </data>
  <data name="EventsTimelineAriaLabel" xml:space="preserve">
    <value>可捲動的甘特圖，此圖顯示目前選擇的時間內發生的事件序列。按向上鍵和向下鍵即可瀏覽。</value>
  </data>
  <data name="StartTimeLabel" xml:space="preserve">
    <value>開始時間</value>
  </data>
  <data name="XAMLParsingViewEventHeaderLabel" xml:space="preserve">
    <value>檔案名稱</value>
  </data>
  <data name="AnalyzeDataStatus" xml:space="preserve">
    <value>正在分析收集的資料</value>
  </data>
  <data name="ElementCountLabel" xml:space="preserve">
    <value>項目計數</value>
  </data>
  <data name="ElementNameLabel" xml:space="preserve">
    <value>項目名稱</value>
  </data>
  <data name="HotElementsViewEventHeaderLabel" xml:space="preserve">
    <value>類型</value>
  </data>
  <data name="TemplateNameLabel" xml:space="preserve">
    <value>範本名稱</value>
  </data>
  <data name="DWM_Category" xml:space="preserve">
    <value>撰寫執行緒</value>
  </data>
  <data name="FrameRateGraphGraphTitle" xml:space="preserve">
    <value>視覺輸送量</value>
  </data>
  <data name="FrameRateUnit" xml:space="preserve">
    <value>FPS</value>
  </data>
  <data name="DefaultTemplateNameLabel" xml:space="preserve">
    <value>預設</value>
  </data>
  <data name="InlineTemplateNameLabel" xml:space="preserve">
    <value>內嵌</value>
  </data>
  <data name="UI_Category" xml:space="preserve">
    <value>UI 執行緒</value>
  </data>
  <data name="HotElementXAMLFileNameLabel" xml:space="preserve">
    <value>檔名</value>
  </data>
  <data name="AppCode_Category" xml:space="preserve">
    <value>應用程式程式碼</value>
  </data>
  <data name="AppCodeLegendTooltip" xml:space="preserve">
    <value>花費在 AppCode 上的時間百分比</value>
  </data>
</root>