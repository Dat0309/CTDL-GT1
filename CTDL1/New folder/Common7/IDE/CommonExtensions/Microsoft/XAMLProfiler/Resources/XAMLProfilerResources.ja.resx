<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="FramesTabTitle" xml:space="preserve">
    <value>フレーム</value>
  </data>
  <data name="FramesTabTooltip" xml:space="preserve">
    <value>フレーム</value>
  </data>
  <data name="GraphCollapseAriaLabel" xml:space="preserve">
    <value>グラフを折りたたむには、Enter キーを押してください。</value>
  </data>
  <data name="GraphExpandAriaLabel" xml:space="preserve">
    <value>グラフを展開するには、Enter キーを押してください。</value>
  </data>
  <data name="HotElementsTabTitle" xml:space="preserve">
    <value>ホット要素</value>
  </data>
  <data name="HotElementsTabTooltip" xml:space="preserve">
    <value>テンプレートによるグループ化</value>
  </data>
  <data name="Layout_Category" xml:space="preserve">
    <value>レイアウト</value>
  </data>
  <data name="LayoutLegendTooltip" xml:space="preserve">
    <value>レイアウトに費やされた時間のパーセンテージ</value>
  </data>
  <data name="LogicalTreeTabTitle" xml:space="preserve">
    <value>論理ツリー</value>
  </data>
  <data name="LogicalTreeTooltip" xml:space="preserve">
    <value>論理ツリー</value>
  </data>
  <data name="MillisecondsAbbreviation" xml:space="preserve">
    <value>ミリ秒</value>
  </data>
  <data name="MillisecondsLabel" xml:space="preserve">
    <value>ミリ秒</value>
  </data>
  <data name="MinutesAbbreviation" xml:space="preserve">
    <value>分</value>
  </data>
  <data name="MinutesLabel" xml:space="preserve">
    <value>分</value>
  </data>
  <data name="ParsingTabTitle" xml:space="preserve">
    <value>解析</value>
  </data>
  <data name="ParsingTabTooltip" xml:space="preserve">
    <value>解析</value>
  </data>
  <data name="Parsing_Category" xml:space="preserve">
    <value>解析</value>
  </data>
  <data name="ParsingLegendTooltip" xml:space="preserve">
    <value>XAML ドキュメントの解析に費やされた時間のパーセンテージ</value>
  </data>
  <data name="RulerAriaLabel" xml:space="preserve">
    <value>ルーラーの最小値は {0}、最大値は {1} です</value>
  </data>
  <data name="RulerLeftSliderAriaLabel" xml:space="preserve">
    <value>左スライダー</value>
  </data>
  <data name="RulerLifecycleMarkLabel" xml:space="preserve">
    <value>アプリ ライフサイクル マーク</value>
  </data>
  <data name="RulerRightSliderAriaLabel" xml:space="preserve">
    <value>右スライダー</value>
  </data>
  <data name="RulerSliderAriaValueText" xml:space="preserve">
    <value>現在の値は {0} です。最小値は {1} です。最大値は {2} です。</value>
  </data>
  <data name="RulerTitle" xml:space="preserve">
    <value>診断セッション</value>
  </data>
  <data name="RulerUserMarkLabel" xml:space="preserve">
    <value>ユーザー マーク</value>
  </data>
  <data name="Ruler_LifeCycleEvents" xml:space="preserve">
    <value>アプリ ライフサイクル マーク</value>
  </data>
  <data name="Ruler_UserMarks" xml:space="preserve">
    <value>ユーザー マーク</value>
  </data>
  <data name="RulerMarkTooltipLabel" xml:space="preserve"> <!-- Appended to label text in diagnostics hub ruler control, e.g. "Activation Start"xxxxxx -->
    <value>場所 {0}</value>
  </data>
  <data name="RulerMarkLabel" xml:space="preserve">
    <value>次のイベントの発生を示すルーラー マーク: {0}</value>
    <comment>{0} is replaced with the tooltip content of the ruler mark(s)</comment>
  </data>
  <data name="SecondsAbbreviation" xml:space="preserve">
    <value>秒</value>
  </data>
  <data name="SecondsLabel" xml:space="preserve">
    <value>秒</value>
  </data>
  <data name="SummaryTabTitle" xml:space="preserve">
    <value>概要</value>
  </data>
  <data name="SummaryTabTooltip" xml:space="preserve">
    <value>概要</value>
  </data>
  <data name="UiThreadActivityAriaLabel" xml:space="preserve">
    <value>アプリケーションの UI スレッド CPU 使用状況を示す棒グラフです。移動するには、左右の方向キーを押してください。</value>
  </data>
  <data name="UiThreadActivityBarAriaLabel" xml:space="preserve">
    <value>{0} は UI スレッドの時間の {1}% を利用しました</value>
  </data>
  <data name="UiThreadActivityChartTitle" xml:space="preserve">
    <value>UI スレッド使用状況 (%)</value>
  </data>
  <data name="XamlOther_Category" xml:space="preserve">
    <value>その他の Xaml</value>
  </data>
  <data name="XamlOtherLegendTooltip" xml:space="preserve">
    <value>他の XAML サービスに費やされた時間のパーセンテージ</value>
  </data>
  <data name="XamlProfilerDetailsViewTitle" xml:space="preserve">
    <value>XAML UI の応答性</value>
  </data>
  <data name="XamlProfilerToolDescription" xml:space="preserve">
    <value>アプリケーション内で時間を要した箇所を検査します</value>
  </data>
  <data name="XamlProfilerToolName" xml:space="preserve">
    <value>XAML UI の応答性</value>
  </data>
  <data name="SelectAnEventDescription" xml:space="preserve">
    <value>詳細を表示するには、タイムライン内でエントリを選択してください</value>
  </data>
  <data name="DescriptionLabel" xml:space="preserve">
    <value>説明</value>
  </data>
  <data name="DurationExclusiveLabel" xml:space="preserve">
    <value>継続時間 (排他)</value>
  </data>
  <data name="DurationInclusiveLabel" xml:space="preserve">
    <value>継続時間 (包括)</value>
  </data>
  <data name="ElementsExclusiveLabel" xml:space="preserve">
    <value>UI 要素 (排他)</value>
  </data>
  <data name="ElementsInclusiveLabel" xml:space="preserve">
    <value>UI 要素 (包括)</value>
  </data>
  <data name="EndTimeLabel" xml:space="preserve">
    <value>終了時刻</value>
  </data>
  <data name="EventsTimelineAriaLabel" xml:space="preserve">
    <value>スクロール可能なガント チャートです。現在選択されている時間内で発生したイベントを順に表示します。移動するには、上下の方向キーを押してください。</value>
  </data>
  <data name="StartTimeLabel" xml:space="preserve">
    <value>開始時刻</value>
  </data>
  <data name="XAMLParsingViewEventHeaderLabel" xml:space="preserve">
    <value>ファイル名</value>
  </data>
  <data name="AnalyzeDataStatus" xml:space="preserve">
    <value>収集したデータを分析しています</value>
  </data>
  <data name="ElementCountLabel" xml:space="preserve">
    <value>要素数</value>
  </data>
  <data name="ElementNameLabel" xml:space="preserve">
    <value>要素名</value>
  </data>
  <data name="HotElementsViewEventHeaderLabel" xml:space="preserve">
    <value>種類</value>
  </data>
  <data name="TemplateNameLabel" xml:space="preserve">
    <value>テンプレート名</value>
  </data>
  <data name="DWM_Category" xml:space="preserve">
    <value>コンポジション スレッド</value>
  </data>
  <data name="FrameRateGraphGraphTitle" xml:space="preserve">
    <value>ビジュアル スループット</value>
  </data>
  <data name="FrameRateUnit" xml:space="preserve">
    <value>FPS</value>
  </data>
  <data name="DefaultTemplateNameLabel" xml:space="preserve">
    <value>既定</value>
  </data>
  <data name="InlineTemplateNameLabel" xml:space="preserve">
    <value>インライン</value>
  </data>
  <data name="UI_Category" xml:space="preserve">
    <value>UI スレッド</value>
  </data>
  <data name="HotElementXAMLFileNameLabel" xml:space="preserve">
    <value>ファイル名</value>
  </data>
  <data name="AppCode_Category" xml:space="preserve">
    <value>アプリケーション コード</value>
  </data>
  <data name="AppCodeLegendTooltip" xml:space="preserve">
    <value>AppCode に費やされた時間のパーセンテージ</value>
  </data>
</root>