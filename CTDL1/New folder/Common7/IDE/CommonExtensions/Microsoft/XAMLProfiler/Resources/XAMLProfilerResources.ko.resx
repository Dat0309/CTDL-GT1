<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="FramesTabTitle" xml:space="preserve">
    <value>프레임</value>
  </data>
  <data name="FramesTabTooltip" xml:space="preserve">
    <value>프레임</value>
  </data>
  <data name="GraphCollapseAriaLabel" xml:space="preserve">
    <value>그래프를 축소하려면 Enter 키를 누릅니다.</value>
  </data>
  <data name="GraphExpandAriaLabel" xml:space="preserve">
    <value>그래프를 확장하려면 Enter 키를 누릅니다.</value>
  </data>
  <data name="HotElementsTabTitle" xml:space="preserve">
    <value>실행 부하 과다 요소</value>
  </data>
  <data name="HotElementsTabTooltip" xml:space="preserve">
    <value>그룹화 템플릿</value>
  </data>
  <data name="Layout_Category" xml:space="preserve">
    <value>레이아웃</value>
  </data>
  <data name="LayoutLegendTooltip" xml:space="preserve">
    <value>레이아웃에 소요된 시간의 백분율</value>
  </data>
  <data name="LogicalTreeTabTitle" xml:space="preserve">
    <value>논리 트리</value>
  </data>
  <data name="LogicalTreeTooltip" xml:space="preserve">
    <value>논리 트리</value>
  </data>
  <data name="MillisecondsAbbreviation" xml:space="preserve">
    <value>밀리초</value>
  </data>
  <data name="MillisecondsLabel" xml:space="preserve">
    <value>밀리초</value>
  </data>
  <data name="MinutesAbbreviation" xml:space="preserve">
    <value>분</value>
  </data>
  <data name="MinutesLabel" xml:space="preserve">
    <value>분</value>
  </data>
  <data name="ParsingTabTitle" xml:space="preserve">
    <value>구문 분석</value>
  </data>
  <data name="ParsingTabTooltip" xml:space="preserve">
    <value>구문 분석</value>
  </data>
  <data name="Parsing_Category" xml:space="preserve">
    <value>구문 분석</value>
  </data>
  <data name="ParsingLegendTooltip" xml:space="preserve">
    <value>XAML 문서를 구문 분석하는 데 소요된 시간의 백분율</value>
  </data>
  <data name="RulerAriaLabel" xml:space="preserve">
    <value>눈금자의 최소값은 {0}이고 최대값은 {1}입니다.</value>
  </data>
  <data name="RulerLeftSliderAriaLabel" xml:space="preserve">
    <value>왼쪽 슬라이더</value>
  </data>
  <data name="RulerLifecycleMarkLabel" xml:space="preserve">
    <value>앱 수명 주기 표시</value>
  </data>
  <data name="RulerRightSliderAriaLabel" xml:space="preserve">
    <value>오른쪽 슬라이더</value>
  </data>
  <data name="RulerSliderAriaValueText" xml:space="preserve">
    <value>현재 값은 {0}입니다. 최소값은 {1}입니다. 최대값은 {2}입니다.</value>
  </data>
  <data name="RulerTitle" xml:space="preserve">
    <value>진단 세션</value>
  </data>
  <data name="RulerUserMarkLabel" xml:space="preserve">
    <value>사용자 표식</value>
  </data>
  <data name="Ruler_LifeCycleEvents" xml:space="preserve">
    <value>앱 수명 주기 표시</value>
  </data>
  <data name="Ruler_UserMarks" xml:space="preserve">
    <value>사용자 표식</value>
  </data>
  <data name="RulerMarkTooltipLabel" xml:space="preserve"> <!-- Appended to label text in diagnostics hub ruler control, e.g. "Activation Start"xxxxxx -->
    <value> 위치: {0}</value>
  </data>
  <data name="RulerMarkLabel" xml:space="preserve">
    <value>다음 이벤트가 발생했음을 나타내는 눈금자 눈금: {0}</value>
    <comment>{0} is replaced with the tooltip content of the ruler mark(s)</comment>
  </data>
  <data name="SecondsAbbreviation" xml:space="preserve">
    <value>초</value>
  </data>
  <data name="SecondsLabel" xml:space="preserve">
    <value>초</value>
  </data>
  <data name="SummaryTabTitle" xml:space="preserve">
    <value>요약</value>
  </data>
  <data name="SummaryTabTooltip" xml:space="preserve">
    <value>요약</value>
  </data>
  <data name="UiThreadActivityAriaLabel" xml:space="preserve">
    <value>응용 프로그램의 UI 스레드 사용률을 나타내는 막대 그래프입니다. 탐색하려면 오른쪽 및 왼쪽 화살표를 누르십시오.</value>
  </data>
  <data name="UiThreadActivityBarAriaLabel" xml:space="preserve">
    <value>{0}의 UI 스레드 시간 사용률: {1}%</value>
  </data>
  <data name="UiThreadActivityChartTitle" xml:space="preserve">
    <value>UI 스레드 사용률(%)</value>
  </data>
  <data name="XamlOther_Category" xml:space="preserve">
    <value>Xaml(기타)</value>
  </data>
  <data name="XamlOtherLegendTooltip" xml:space="preserve">
    <value>기타 XAML 서비스에 소요된 시간의 백분율</value>
  </data>
  <data name="XamlProfilerDetailsViewTitle" xml:space="preserve">
    <value>XAML UI 응답성</value>
  </data>
  <data name="XamlProfilerToolDescription" xml:space="preserve">
    <value>응용 프로그램에서 시간이 소요된 위치를 검토합니다.</value>
  </data>
  <data name="XamlProfilerToolName" xml:space="preserve">
    <value>XAML UI 응답성</value>
  </data>
  <data name="SelectAnEventDescription" xml:space="preserve">
    <value>해당 세부 정보를 보려면 타임라인 내에서 항목을 선택합니다.</value>
  </data>
  <data name="DescriptionLabel" xml:space="preserve">
    <value>설명</value>
  </data>
  <data name="DurationExclusiveLabel" xml:space="preserve">
    <value>기간(전용)</value>
  </data>
  <data name="DurationInclusiveLabel" xml:space="preserve">
    <value>기간(포괄)</value>
  </data>
  <data name="ElementsExclusiveLabel" xml:space="preserve">
    <value>UI 요소(전용)</value>
  </data>
  <data name="ElementsInclusiveLabel" xml:space="preserve">
    <value>UI 요소(포괄)</value>
  </data>
  <data name="EndTimeLabel" xml:space="preserve">
    <value>종료 시간</value>
  </data>
  <data name="EventsTimelineAriaLabel" xml:space="preserve">
    <value>현재 선택한 시간 내에 발생한 이벤트 순서를 표시하는 스크롤 가능한 Gantt 차트입니다.  이동하려면 위쪽 및 아래쪽 화살표를 누르십시오.</value>
  </data>
  <data name="StartTimeLabel" xml:space="preserve">
    <value>시작 시간</value>
  </data>
  <data name="XAMLParsingViewEventHeaderLabel" xml:space="preserve">
    <value>파일 이름</value>
  </data>
  <data name="AnalyzeDataStatus" xml:space="preserve">
    <value>수집된 데이터 분석</value>
  </data>
  <data name="ElementCountLabel" xml:space="preserve">
    <value>요소 수</value>
  </data>
  <data name="ElementNameLabel" xml:space="preserve">
    <value>요소 이름</value>
  </data>
  <data name="HotElementsViewEventHeaderLabel" xml:space="preserve">
    <value>형식</value>
  </data>
  <data name="TemplateNameLabel" xml:space="preserve">
    <value>템플릿 이름</value>
  </data>
  <data name="DWM_Category" xml:space="preserve">
    <value>컴퍼지션 스레드</value>
  </data>
  <data name="FrameRateGraphGraphTitle" xml:space="preserve">
    <value>시각적 처리량</value>
  </data>
  <data name="FrameRateUnit" xml:space="preserve">
    <value>FPS</value>
  </data>
  <data name="DefaultTemplateNameLabel" xml:space="preserve">
    <value>기본값</value>
  </data>
  <data name="InlineTemplateNameLabel" xml:space="preserve">
    <value>인라인</value>
  </data>
  <data name="UI_Category" xml:space="preserve">
    <value>UI 스레드</value>
  </data>
  <data name="HotElementXAMLFileNameLabel" xml:space="preserve">
    <value>파일 이름</value>
  </data>
  <data name="AppCode_Category" xml:space="preserve">
    <value>앱 코드</value>
  </data>
  <data name="AppCodeLegendTooltip" xml:space="preserve">
    <value>AppCode에 소요된 시간의 백분율</value>
  </data>
</root>