// [!output SAFE_IDL_NAME].idl : source de la bibliothèque de types pour le projet de contrôle ActiveX.

// Ce fichier sera traité par l'outil Compilateur MIDL pour
// produire la bibliothèque de types ([!output SAFE_IDL_NAME].tlb) qui deviendra une ressource dans
// [!output PROJECT_NAME].ocx.

#include <olectl.h>
#include <idispids.h>

[ uuid([!output LIBID_REGISTRY_FORMAT]), version(1.0),
  control ]
library [!output LIB_NAME]Lib
{
	importlib(STDOLE_TLB);

	//  Interface de dispatch principale pour [!output CONTROL_CLASS]
	[ 
		uuid([!output PRIMARY_IID_REGISTRY_FORMAT])	
	]
	dispinterface _D[!output SAFE_PROJECT_IDENTIFIER_NAME]
	{
		properties:
[!if ASYNC_PROPERTY_LOAD]
			[id(DISPID_READYSTATE), readonly] long ReadyState;
[!endif]
		methods:
[!if ABOUT_BOX]

			[id(DISPID_ABOUTBOX)] void AboutBox();
[!endif]
	};

	//  Interface de dispatch d'événement pour [!output CONTROL_CLASS]

	[ 
		uuid([!output EVENT_IID_REGISTRY_FORMAT])	
	]
	dispinterface _D[!output SAFE_PROJECT_IDENTIFIER_NAME]Events
	{
		properties:
			//  L'interface d'événement n'a pas de propriété

		methods:
[!if ASYNC_PROPERTY_LOAD]
			[id(DISPID_READYSTATECHANGE)] void ReadyStateChange();
[!endif]
	};

	//  Informations de classe pour [!output CONTROL_CLASS]
	[
[!if RUNTIME_LICENSE]
		uuid([!output CONTROL_CLSID]), licensed
[!else]	
		uuid([!output CONTROL_CLSID])
[!endif]	
	]
	coclass [!output LIB_NAME]
	{
		[default] dispinterface _D[!output SAFE_PROJECT_IDENTIFIER_NAME];
		[default, source] dispinterface _D[!output SAFE_PROJECT_IDENTIFIER_NAME]Events;
	};

};
